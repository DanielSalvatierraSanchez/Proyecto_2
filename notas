En este caso, para arrancar el proyecto puedes seguir los siguientes pasos:

- Crea tu carpeta de proyecto e inicializa un repositorio de Git en ella.
✅- Arranca una plantilla de Vite con JavaScript Vanilla o haz uno a mano combinando HTML, CSS y JS.
✅- Introduce primero en tu archivo un objeto que simule todos los elementos de la tienda con un formato similar al siguiente:

<!-- const products = [
  {
    name: 'HP Essentials 255 G8 AMD',
    price: 289,
    stars: 4,
    reviews: 250,
    seller: 'PcComponentes',
    image: ''
  },
]; -->

Como podrás observar, tenemos un array de objetos que recorreremos para pintar cada carta de elemento.

✅- Carga el archivo JS en tu HTML al final del body tal y como hacemos en los videos de JS DOM.

- Criterio de aceptación
Para verificar que tu proyecto cumple unos requisitos adecuados al conocimiento que debes haber conseguido, validaremos los siguientes puntos:

Criterio JavaScript
[✅] El HTML de la web se genera de forma dinámica mediante los tag templates que se habrá definido en JavaScript. Se permitirá tener de base dos secciones .filter y .products para introducir elementos dentro con JavaScript para el DOM.

[✅] Se recorrerá la lista de productos y se creará una carta de producto para cada elemento de forma dinámica por medio de for o de .forEach.

[✅] Se definirán al menos dos filtros para los productos en la parte izquierda del documento:

[✅] El primer filtro será un elemento [select](<https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select>) que muestra todos los vendedores (seller) distintos que hay en los productos del proyecto; y que al ser clickado, hará que el documento solamente muestre los elementos que tengan la propiedad seller con el mismo valor.

[✅] El segundo filtro será un input de tipo number acompañado de un botón que contenga el texto “Buscar”. El usuario podrá introducir una cantidad de dinero en el filtro y pulsar buscar, esto hará que solo aparezcan en pantalla los elementos cuyo precio (price) sea menor que esta cantidad.

[✅] Habrá un botón “Limpiar Filtros” que al ser pulsado, volverá a pintar en pantalla todos los productos, sin aplicar filtro ninguno.


Criterios HTML y CSS
[✅] El código HTML está correctamente estructurado. Hay dos elementos section o article principales que representan los filtros de búsqueda (a la izquierda en escritorio, arriba del contenido en móvil), y los elementos a vender en la tienda (a la derecha en escritorio, abajo de los filtros en móvil).

[✅] Los elementos a vender en la tienda comparten la misma clase de CSS, que define una carta de producto y tiene algún efecto :hover cuando pasa el ratón sobre ellas.

[✅] La web cuenta con media queries para escritorio y móvil. Así como una correcta estructura y posicionamiento de elementos por medio de flex o grid.

[✅] Los productos tienen imágenes correctas que se ven en la carta de componente de cada uno


Te comento una serie de modificaciones →

✅1️⃣ BONUS: Realizar los dos filtros de manera conjunta. Esto se conseguiría añadiendo las dos funciones dentro de la misma. Es decir, que al filtrar por select y por input, solo salgan artículos que cumplan con los dos filtros.

✅2️⃣ En caso de que realice la búsqueda en el input numérico por un valor muy bajo, que salga un mensaje de "No se han encontrado resultados"

✅3️⃣ Al darle a limpiar filtros, resetea bien el listado pero que limpie el valor del input y del select.

✅4️⃣ Añadiría una opción en el select que sea TODAS.

✅5️⃣ En responsive, aumentaría el ancho de los filtros y reduciría algo la altura. Colocaría 2 artículos por fila, para que el scroll no sea tan largo.
